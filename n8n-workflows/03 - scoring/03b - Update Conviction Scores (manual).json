{
  "name": "03b - Update Conviction Scores (manual)",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "d3a41eef-99a6-4dcd-882c-37180aad131a",
      "name": "When clicking 'Execute workflow'"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE TABLE IF NOT EXISTS ticker_buys (\n  symbol TEXT PRIMARY KEY,\n  conviction INTEGER,\n  last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  thesis TEXT,\n  original_conviction INTEGER,\n  last_conviction INTEGER\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        224,
        0
      ],
      "id": "347a1dce-5682-435d-bded-99f67e146cac",
      "name": "Create Enhanced Table",
      "credentials": {
        "postgres": {
          "id": "MI553DLfDKBYBMXy",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE ticker_buys\nSET thesis = sub.thesis\nFROM (\n  SELECT symbol, STRING_AGG(reason, ' || ') AS thesis\n  FROM ticker_scores\n  GROUP BY symbol\n) sub\nWHERE ticker_buys.symbol = sub.symbol\n  AND (ticker_buys.thesis IS NULL OR ticker_buys.thesis = '');",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        448,
        0
      ],
      "id": "d9274ae8-fd7f-4eab-859f-555ad838d15a",
      "name": "Fill Thesis from Ticker Scores",
      "credentials": {
        "postgres": {
          "id": "MI553DLfDKBYBMXy",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Step 2: Move current conviction to last_conviction\n-- and set original_conviction if it's empty\nUPDATE ticker_buys \nSET \n  last_conviction = conviction,\n  original_conviction = COALESCE(original_conviction, conviction)\nWHERE conviction IS NOT NULL;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        672,
        0
      ],
      "id": "5c6fdf75-b3e1-4035-81b1-fbe13cbe4106",
      "name": "Preserve Conviction History",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "MI553DLfDKBYBMXy",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// New conviction scores - paste your updated scores here\nlet tickers =[\n  { \"symbol\": \"IMPP\", \"signal\": \"Buy\", \"conviction\": 5 },\n  { \"symbol\": \"CHRS\", \"signal\": \"Buy\", \"conviction\": 5 },\n  { \"symbol\": \"PBYI\", \"signal\": \"Buy\", \"conviction\": 4 },\n  { \"symbol\": \"MIND\", \"signal\": \"Buy\", \"conviction\": 3 },\n  { \"symbol\": \"MAPS\", \"signal\": \"Buy\", \"conviction\": 3 },\n  { \"symbol\": \"IMMR\", \"signal\": \"Buy\", \"conviction\": 3 },\n  { \"symbol\": \"CRNT\", \"signal\": \"Buy\", \"conviction\": 3 },\n  { \"symbol\": \"GAMB\", \"signal\": \"Buy\", \"conviction\": 3 },\n  { \"symbol\": \"LGPS\", \"signal\": \"Buy\", \"conviction\": 2 },\n  { \"symbol\": \"MATH\", \"signal\": \"Buy\", \"conviction\": 2 },\n  { \"symbol\": \"PSHG\", \"signal\": \"Buy\", \"conviction\": 3 }\n];\n\nreturn tickers;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        896,
        0
      ],
      "id": "0a7b53e6-4a03-4b2c-8f14-6ce0a6048a30",
      "name": "New Conviction Scores"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO ticker_buys (symbol, conviction, last_updated)\nVALUES (\n  '{{ $json.symbol }}',\n  {{ $json.conviction }},\n  CURRENT_TIMESTAMP\n)\nON CONFLICT (symbol) DO UPDATE\nSET\n  conviction = EXCLUDED.conviction,\n  last_updated = CURRENT_TIMESTAMP",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1120,
        0
      ],
      "id": "6daa406f-e793-4045-9c9f-bf5170e2d57c",
      "name": "Update Conviction Scores",
      "credentials": {
        "postgres": {
          "id": "MI553DLfDKBYBMXy",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "Enhanced Conviction Score Workflow:\n\n1. Fill thesis from ticker_scores where empty\n2. Move conviction â†’ last_conviction \n3. Set original_conviction if empty\n4. Update with new conviction scores\n\nThis preserves historical data while updating scores.",
        "width": 300
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        400,
        208
      ],
      "typeVersion": 1,
      "id": "f75ad499-c159-43de-bb6b-52d20747c8b2",
      "name": "Workflow Explanation"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking 'Execute workflow'": {
      "main": [
        [
          {
            "node": "Create Enhanced Table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Enhanced Table": {
      "main": [
        [
          {
            "node": "Fill Thesis from Ticker Scores",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fill Thesis from Ticker Scores": {
      "main": [
        [
          {
            "node": "Preserve Conviction History",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preserve Conviction History": {
      "main": [
        [
          {
            "node": "New Conviction Scores",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "New Conviction Scores": {
      "main": [
        [
          {
            "node": "Update Conviction Scores",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "704a10e2-a9f5-4a4e-b786-e621360c2e80",
  "meta": {
    "instanceId": "f789c2c474c97ef5e4de040eeaabbf0c6fb8405fe1c6683d5ae6768188a5df19"
  },
  "id": "H39avly0oRGdWpOw",
  "tags": [
    {
      "createdAt": "2025-09-04T15:23:38.975Z",
      "updatedAt": "2025-09-04T15:23:38.975Z",
      "id": "yQaAGmyd3yVCL790",
      "name": "janus"
    }
  ]
}