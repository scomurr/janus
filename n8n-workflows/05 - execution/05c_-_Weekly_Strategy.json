[{"createdAt":"2025-09-10T00:10:30.765Z","updatedAt":"2025-09-11T15:26:23.000Z","id":"AJ0gM4algmKhweQM","name":"05c - Weekly Strategy","active":true,"isArchived":false,"nodes":[{"parameters":{"rule":{"interval":[{"field":"cronExpression","expression":"0 9 * * 1"}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-224,-160],"id":"546b4694-a1ef-4f4b-9666-e6cbefb0e0b7","name":"Monday 9 AM - Week Start"},{"parameters":{"rule":{"interval":[{"field":"cronExpression","expression":"0 10 * * 2-4"}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-224,160],"id":"d68c5716-a042-4483-9be9-2fc78bec4905","name":"Tue-Thu 10 AM - Check Convictions"},{"parameters":{"rule":{"interval":[{"field":"cronExpression","expression":"0 16 * * 5"}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-224,480],"id":"57564c84-502f-41fa-8840-f12bda63f4be","name":"Friday 4 PM - Week End"},{"parameters":{"operation":"executeQuery","query":"SELECT \n  wp.symbol,\n  SUM(wp.shares_bought) - SUM(wp.shares_sold) AS net_position,\n  dp.price_close\nFROM weekly_positions wp\nJOIN daily_prices dp \n  ON wp.symbol = dp.symbol \n  AND dp.date = {{ $json.date }}\nWHERE wp.date >= date_trunc('week', {{ $json.date }}::DATE)\n  AND wp.symbol != 'USDW'\nGROUP BY wp.symbol, dp.price_close\nHAVING SUM(wp.shares_bought) - SUM(wp.shares_sold) > 0;\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[208,480],"id":"47f0d22c-ccf4-4ff6-872c-e7af37b8e5c2","name":"Get All Friday Positions","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}}},{"parameters":{"jsCode":"// Pull the trade date from Set Date2 node\nconst tradeDate = $('Set Date2').first().json.date;\n\nlet totalCashFromSales = 0;\n\nconst results = items.map(item => {\n  const sharesToSell = item.json.net_position;\n  const saleAmount = sharesToSell * item.json.price_close;\n  totalCashFromSales += saleAmount;\n\n  return {\n    json: {\n      symbol: item.json.symbol,\n      date: tradeDate,        // use Set Date2's date here\n      shares_sold: sharesToSell,\n      sell_price: item.json.price_close,\n      conviction_at_sell: null // Friday sells regardless of conviction\n    }\n  };\n});\n\n// Add USDW entry with all cash from sales\nif (totalCashFromSales > 0) {\n  results.push({\n    json: {\n      symbol: 'USDW',\n      date: tradeDate,        // keep consistent\n      shares_bought: totalCashFromSales,\n      buy_price: 1.0,\n      conviction_at_buy: 0\n    }\n  });\n}\n\nreturn results;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[432,480],"id":"c6628717-cdaf-4365-8051-191fac28e51b","name":"Calculate Friday Sales"},{"parameters":{"operation":"executeQuery","query":"INSERT INTO weekly_positions (\n  symbol, date, shares_bought, shares_sold, buy_price, sell_price, conviction_at_buy, conviction_at_sell\n)\nVALUES (\n  '{{ $json.symbol }}',\n  {{ $json.date }},\n  {{ $json.shares_bought ?? 0 }},\n  {{ $json.shares_sold ?? 0 }},\n  {{ $json.buy_price ?? NULL }},\n  {{ $json.sell_price ?? NULL }},\n  {{ $json.conviction_at_buy ?? NULL }},\n  {{ $json.conviction_at_sell ?? NULL }}\n);\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[656,480],"id":"70706f16-aa88-4c1e-99c6-1fcabb83c4a3","name":"Record Friday Sales","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}},"disabled":true},{"parameters":{"operation":"executeQuery","query":"SELECT \n  COALESCE(shares_bought, 0) - COALESCE(shares_sold, 0) AS current_portfolio_value\nFROM weekly_positions\nWHERE symbol = 'USDW'\n  AND date < CAST({{$json.date}} AS date)\nORDER BY date DESC, updated_at DESC\nLIMIT 1;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[224,-160],"id":"21ec0ad2-1c60-48c5-acbf-61b0dd347e39","name":"Get USDW Cash Available","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT symbol, conviction\nFROM ticker_buys\nWHERE trade_date = {{ $('Set Date').item.json.date }}\n  AND conviction > 0\nORDER BY symbol;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[448,-160],"id":"810ce17c-83bc-407e-853d-63f3b5ae9055","name":"Get Latest Conviction Scores","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}}},{"parameters":{"jsCode":"const availableCash = $('Get USDW Cash Available').first().json.current_portfolio_value;\nconst tickers = $('Get Latest Conviction Scores').all();\n\n// Calculate total conviction (excluding USDD)\nconst totalConviction = tickers.reduce((sum, ticker) => {\n  return sum + ticker.json.conviction;\n}, 0);\n\nif (totalConviction === 0) {\n  return [];\n}\n\n// Calculate allocations\nreturn tickers.map(ticker => ({\n  json: {\n    symbol: ticker.json.symbol,\n    conviction: ticker.json.conviction,\n    allocation_usd: Math.round((ticker.json.conviction / totalConviction) * availableCash * 100) / 100\n  }\n}));"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[672,-160],"id":"de11d43a-4785-44c5-b3f8-c36647c14efd","name":"Calculate Position Sizes"},{"parameters":{"operation":"executeQuery","query":"SELECT \n  '{{ $json.symbol }}' AS symbol,\n  {{ $json.allocation_usd }} AS allocation_usd,\n  dp.price_open\nFROM daily_prices dp\nWHERE dp.symbol = '{{ $json.symbol }}'\n  AND dp.date = {{ $(\"Set Date\").item.json.date }}::date;\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[896,-160],"id":"98351230-2307-4c93-a938-906c3e6b91ca","name":"Get Monday Open Prices","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}}},{"parameters":{"jsCode":"// Get date passed in from \"Set Date\" node\nconst tradeDate = $('Set Date').first().json.date;\nconst availableCash = $('Get USDW Cash Available').first().json.current_portfolio_value;\nlet totalSpent = 0;\n\nconst results = items.map(item => {\n  const shares = Math.floor(item.json.allocation_usd / item.json.price_open * 10000) / 10000;\n  const actualSpent = shares * item.json.price_open;\n  totalSpent += actualSpent;\n  \n  return {\n    json: {\n      symbol: item.json.symbol,\n      date: tradeDate,\n      shares_bought: shares\n    }\n  };\n});\n\n// Add USDD record showing remaining cash (should be ~$0)\nconst remainingCash = availableCash - totalSpent;\nresults.push({\n  json: {\n    symbol: 'USDW',\n    date: tradeDate,\n    shares_bought: remainingCash\n  }\n});\n\nreturn results;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1120,-160],"id":"19a1c253-8549-4c55-a474-f9e7ed30fd44","name":"Calculate Monday Buys"},{"parameters":{"operation":"executeQuery","query":"INSERT INTO weekly_positions (symbol, date, shares_bought, shares_sold, buy_price, sell_price, conviction_at_buy, conviction_at_sell)\nVALUES ('{{ $json.symbol }}', {{ $json.date }}, \n        {{ $json.shares_bought ?? 0 }}, \n        {{ $json.shares_sold ?? 0 }},\n        {{ $json.buy_price ?? 'NULL' }},\n        {{ $json.sell_price ?? 'NULL' }},\n        {{ $json.conviction_at_buy ?? 'NULL' }},\n        {{ $json.conviction_at_sell ?? 'NULL' }}\n       );","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1344,-160],"id":"6805a42e-244b-46a6-9fa7-7753eafc14a9","name":"Record Monday Buys","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}}},{"parameters":{"assignments":{"assignments":[{"id":"50a623a5-105d-4ad2-9f17-159b75782bb6","name":"date","value":"={{ $today.toFormat('yyyy-MM-dd') }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[0,-160],"id":"70dc463e-ba13-4e76-a40f-20c0254c5db1","name":"Set Date"},{"parameters":{"operation":"executeQuery","query":"SELECT DISTINCT wp.symbol\nFROM weekly_positions wp\nWHERE wp.date >= date_trunc('week', (NOW() AT TIME ZONE 'America/Chicago')::DATE)\n  AND (\n    SELECT SUM(shares_bought) - SUM(shares_sold)\n    FROM weekly_positions\n    WHERE symbol = wp.symbol\n      AND date >= date_trunc('week', (NOW() AT TIME ZONE 'America/Chicago')::DATE)\n  ) > 0\n  AND wp.symbol != 'USDW';\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[224,160],"id":"5774c668-27d2-48ce-a5eb-d025e72872d3","name":"Get Current Week Holdings","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT \n  '{{ $json.symbol }}' AS symbol,\n  COALESCE(tb.conviction, 0) AS current_conviction\nFROM ticker_buys tb\nWHERE tb.symbol = '{{ $json.symbol }}'\n  AND tb.trade_date = {{ $('Set Date1').item.json.date }}\nUNION ALL\nSELECT '{{ $json.symbol }}' AS symbol, 0 AS current_conviction\nWHERE NOT EXISTS (\n  SELECT 1 \n  FROM ticker_buys tb2 \n  WHERE tb2.symbol = '{{ $json.symbol }}' \n    AND tb2.trade_date = {{ $('Set Date1').item.json.date }}\n)\nLIMIT 1;\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[448,160],"id":"6c8b4e0f-ce13-4f81-a228-d0549669ef67","name":"Check Current Convictions","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}}},{"parameters":{"jsCode":"// Filter for symbols with conviction = 0 (need to sell)\nconst symbolsToSell = items.filter(item => item.json.current_conviction === 0);\n\nif (symbolsToSell.length === 0) {\n  // No positions to sell, return empty to stop workflow\n  return [];\n}\n\nreturn symbolsToSell;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[672,64],"id":"58c63d3d-20d4-49d4-8fe5-428832c51716","name":"Filter Zero Conviction Positions"},{"parameters":{"operation":"executeQuery","query":"SELECT \n  '{{ $json.symbol }}' as symbol,\n  SUM(shares_bought) - SUM(shares_sold) as net_position,\n  dp.price_close\nFROM weekly_positions wp, daily_prices dp\nWHERE wp.symbol = '{{ $json.symbol }}'\n  AND wp.date >= date_trunc('week', (NOW() AT TIME ZONE 'America/Chicago')::DATE)\n  AND dp.symbol = '{{ $json.symbol }}'\n  AND dp.date = dp.date = '{{ $('Set Date1').item.json.date }}'\nGROUP BY wp.symbol, dp.price_close\nHAVING SUM(shares_bought) - SUM(shares_sold) > 0;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[896,64],"id":"a7d54acd-0933-4be5-b26b-07c633b7d2ba","name":"Get Position Size and Price","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}}},{"parameters":{"jsCode":"const today = new Date().toISOString().split('T')[0];\nlet totalCashFromSales = 0;\n\nconst results = items.map(item => {\n  const sharesToSell = item.json.net_position;\n  const saleAmount = sharesToSell * item.json.price_close;\n  totalCashFromSales += saleAmount;\n  \n  return {\n    json: {\n      symbol: item.json.symbol,\n      date: today,\n      shares_sold: sharesToSell,\n      sell_price: item.json.price_close,\n      conviction_at_sell: 0\n    }\n  };\n});\n\n// Add USDW to reflect cash from sales\nif (totalCashFromSales > 0) {\n  results.push({\n    json: {\n      symbol: 'USDW',\n      date: today,\n      shares_bought: totalCashFromSales,\n      buy_price: 1.0,\n      conviction_at_buy: 0\n    }\n  });\n}\n\nreturn results;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1120,64],"id":"c390c036-0436-4f33-8710-3734e153cb11","name":"Calculate Midweek Sales"},{"parameters":{"operation":"executeQuery","query":"INSERT INTO weekly_positions (\n  symbol, date, shares_bought, shares_sold,\n  buy_price, sell_price, conviction_at_buy, conviction_at_sell\n)\nVALUES (\n  '{{ $json.symbol }}',\n  '{{ $json.date }}',\n  {{ $json.shares_bought ?? 0 }},\n  {{ $json.shares_sold ?? 0 }},\n  {{ $json.buy_price ?? NULL }},\n  {{ $json.sell_price ?? NULL }},\n  {{ $json.conviction_at_buy ?? NULL }},\n  {{ $json.conviction_at_sell ?? NULL }}\n);\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1344,64],"id":"e34ef659-91ef-4a04-b0be-62ed5311a9b0","name":"Record Midweek Sales","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}},"disabled":true},{"parameters":{"assignments":{"assignments":[{"id":"50a623a5-105d-4ad2-9f17-159b75782bb6","name":"date","value":"='2025-09-09'","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[0,160],"id":"774dc744-ce2a-48e4-bc3e-b195f8724d3e","name":"Set Date1"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"89e5057a-9906-4284-b41a-26fbdc04593e","leftValue":"={{ $json.current_conviction }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[672,256],"id":"1438de50-7b2d-476c-823b-ea6f27200ab7","name":"If"},{"parameters":{"authentication":"webhook","content":"=A conviction score of 0 was reached midweek. Check n8n for any workflow issues with the flow:  {{ $workflow.name }}","options":{}},"type":"n8n-nodes-base.discord","typeVersion":2,"position":[896,256],"id":"8c0f04f7-0ac4-4c1e-9520-9d59d314ecd7","name":"For debugging - in case there is an error when we hit conviction score 0","webhookId":"5fb1bc98-91d0-4e77-945d-801c21404fa2","credentials":{"discordWebhookApi":{"id":"hXnySa96N3aNgiBT","name":"Janus Errors Webhook"}}},{"parameters":{"assignments":{"assignments":[{"id":"50a623a5-105d-4ad2-9f17-159b75782bb6","name":"date","value":"='2025-09-09'","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[0,480],"id":"00fcfc7c-2bad-473c-ba5c-2b6ad96c60cc","name":"Set Date2"},{"parameters":{"authentication":"webhook","content":"=For debugging - validate Friday close workflow for Weekly:  {{ $workflow.name }}","options":{}},"type":"n8n-nodes-base.discord","typeVersion":2,"position":[656,688],"id":"dfeaa9d0-c6bb-4b34-b488-a5964ee59b6c","name":"For debugging - in case there is an error when we hit conviction score ","webhookId":"5fb1bc98-91d0-4e77-945d-801c21404fa2","credentials":{"discordWebhookApi":{"id":"hXnySa96N3aNgiBT","name":"Janus Errors Webhook"}}},{"parameters":{},"type":"n8n-nodes-base.errorTrigger","typeVersion":1,"position":[1280,672],"id":"e869488e-f3c4-4cd9-aa07-7a88c42a822a","name":"Error Trigger"},{"parameters":{"authentication":"webhook","content":"=Error:  {{ $json.execution.error.message }}\nWorkflow: {{ $workflow.name }}\nCheck N8N","options":{}},"type":"n8n-nodes-base.discord","typeVersion":2,"position":[1504,672],"id":"e4ddb504-3867-48c3-ae9c-7acaacd8da18","name":"Discord","webhookId":"ca20c902-d9f2-42e0-903e-8403d43611f1","credentials":{"discordWebhookApi":{"id":"hXnySa96N3aNgiBT","name":"Janus Errors Webhook"}}},{"parameters":{"authentication":"webhook","content":"=Workflow started:  {{ $workflow.name }}","options":{}},"type":"n8n-nodes-base.discord","typeVersion":2,"position":[-16,-368],"id":"1916a207-2b40-43b4-9055-e3f774a9f642","name":"Workflow Started","webhookId":"1103af16-40f1-459b-8d6c-37a2f4a0254e","credentials":{"discordWebhookApi":{"id":"hXnySa96N3aNgiBT","name":"Janus Errors Webhook"}}},{"parameters":{"authentication":"webhook","content":"=Workflow completed:  {{ $workflow.name }}","options":{}},"type":"n8n-nodes-base.discord","typeVersion":2,"position":[1600,288],"id":"65839761-e566-47d4-ba94-5cecc0594dc8","name":"Workflow Completed","webhookId":"1103af16-40f1-459b-8d6c-37a2f4a0254e","credentials":{"discordWebhookApi":{"id":"hXnySa96N3aNgiBT","name":"Janus Errors Webhook"}}}],"connections":{"Monday 9 AM - Week Start":{"main":[[{"node":"Set Date","type":"main","index":0},{"node":"Workflow Started","type":"main","index":0}]]},"Tue-Thu 10 AM - Check Convictions":{"main":[[{"node":"Set Date1","type":"main","index":0},{"node":"Workflow Started","type":"main","index":0}]]},"Friday 4 PM - Week End":{"main":[[{"node":"Set Date2","type":"main","index":0},{"node":"Workflow Started","type":"main","index":0}]]},"Get All Friday Positions":{"main":[[{"node":"Calculate Friday Sales","type":"main","index":0}]]},"Calculate Friday Sales":{"main":[[{"node":"Record Friday Sales","type":"main","index":0},{"node":"For debugging - in case there is an error when we hit conviction score ","type":"main","index":0}]]},"Get USDW Cash Available":{"main":[[{"node":"Get Latest Conviction Scores","type":"main","index":0}]]},"Get Latest Conviction Scores":{"main":[[{"node":"Calculate Position Sizes","type":"main","index":0}]]},"Calculate Position Sizes":{"main":[[{"node":"Get Monday Open Prices","type":"main","index":0}]]},"Get Monday Open Prices":{"main":[[{"node":"Calculate Monday Buys","type":"main","index":0}]]},"Calculate Monday Buys":{"main":[[{"node":"Record Monday Buys","type":"main","index":0}]]},"Set Date":{"main":[[{"node":"Get USDW Cash Available","type":"main","index":0}]]},"Get Current Week Holdings":{"main":[[{"node":"Check Current Convictions","type":"main","index":0}]]},"Check Current Convictions":{"main":[[{"node":"Filter Zero Conviction Positions","type":"main","index":0},{"node":"If","type":"main","index":0}]]},"Filter Zero Conviction Positions":{"main":[[{"node":"Get Position Size and Price","type":"main","index":0}]]},"Get Position Size and Price":{"main":[[{"node":"Calculate Midweek Sales","type":"main","index":0}]]},"Calculate Midweek Sales":{"main":[[{"node":"Record Midweek Sales","type":"main","index":0}]]},"Set Date1":{"main":[[{"node":"Get Current Week Holdings","type":"main","index":0}]]},"If":{"main":[[{"node":"For debugging - in case there is an error when we hit conviction score 0","type":"main","index":0}]]},"Set Date2":{"main":[[{"node":"Get All Friday Positions","type":"main","index":0}]]},"Error Trigger":{"main":[[{"node":"Discord","type":"main","index":0}]]},"Record Friday Sales":{"main":[[{"node":"Workflow Completed","type":"main","index":0}]]},"Record Midweek Sales":{"main":[[{"node":"Workflow Completed","type":"main","index":0}]]},"Record Monday Buys":{"main":[[{"node":"Workflow Completed","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Monday 9 AM - Week Start":{"recurrenceRules":[]},"node:Tue-Thu 10 AM - Check Convictions":{"recurrenceRules":[]},"node:Friday 4 PM - Week End":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"905187c8-4294-4afd-9302-bc38b5a126d8","triggerCount":3,"tags":[{"createdAt":"2025-09-04T15:23:38.975Z","updatedAt":"2025-09-04T15:23:38.975Z","id":"yQaAGmyd3yVCL790","name":"janus"}],"shared":[{"createdAt":"2025-09-10T00:10:30.770Z","updatedAt":"2025-09-10T00:10:30.770Z","role":"workflow:owner","workflowId":"AJ0gM4algmKhweQM","projectId":"33RSXH6V1FUTQaMQ","project":{"createdAt":"2025-08-29T14:57:46.722Z","updatedAt":"2025-08-29T15:00:17.904Z","id":"33RSXH6V1FUTQaMQ","name":"Scott Murray <scomurr@scomurr.com>","type":"personal","icon":null,"description":null}}]}]