[{"createdAt":"2025-09-11T00:13:29.168Z","updatedAt":"2025-09-11T02:35:16.000Z","id":"HWgsCyk7d5ywxWAh","name":"00 - Weekly Fixer","active":false,"isArchived":false,"nodes":[{"parameters":{"operation":"executeQuery","query":"SELECT \n  COALESCE(shares_bought, 0) - COALESCE(shares_sold, 0) AS current_portfolio_value\nFROM weekly_positions\nWHERE symbol = 'USDW'\n  AND date < CAST({{$json.date}} AS date)\nORDER BY date DESC, updated_at DESC\nLIMIT 1;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[64,-48],"id":"74f0388e-aae7-4a73-93ae-c0cb2ecc08cc","name":"Get USDW Cash Available","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT symbol, conviction\nFROM ticker_buys\nWHERE trade_date = {{ $('Set Date').item.json.date }}\n  AND conviction > 0\nORDER BY symbol;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[288,-48],"id":"d15f4c01-1185-4d2a-9bdc-c166962153be","name":"Get Latest Conviction Scores","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}}},{"parameters":{"jsCode":"const availableCash = $('Get USDW Cash Available').first().json.current_portfolio_value;\nconst tickers = $('Get Latest Conviction Scores').all();\n\n// Calculate total conviction (excluding USDD)\nconst totalConviction = tickers.reduce((sum, ticker) => {\n  return sum + ticker.json.conviction;\n}, 0);\n\nif (totalConviction === 0) {\n  return [];\n}\n\n// Calculate allocations\nreturn tickers.map(ticker => ({\n  json: {\n    symbol: ticker.json.symbol,\n    conviction: ticker.json.conviction,\n    allocation_usd: Math.round((ticker.json.conviction / totalConviction) * availableCash * 100) / 100\n  }\n}));"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[512,-48],"id":"d071e242-0799-4c62-b330-39060db402e8","name":"Calculate Position Sizes"},{"parameters":{"operation":"executeQuery","query":"SELECT \n  '{{ $json.symbol }}' AS symbol,\n  {{ $json.allocation_usd }} AS allocation_usd,\n  dp.price_open\nFROM daily_prices dp\nWHERE dp.symbol = '{{ $json.symbol }}'\n  AND dp.date = {{ $(\"Set Date\").item.json.date }}::date;\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[736,-48],"id":"43a9cede-a498-4213-a944-097728045cab","name":"Get Monday Open Prices","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}}},{"parameters":{"jsCode":"// Get date passed in from \"Set Date\" node\nconst tradeDate = $('Set Date').first().json.date;\nconst availableCash = $('Get USDW Cash Available').first().json.current_portfolio_value;\nlet totalSpent = 0;\n\nconst results = items.map(item => {\n  const shares = Math.floor(item.json.allocation_usd / item.json.price_open * 10000) / 10000;\n  const actualSpent = shares * item.json.price_open;\n  totalSpent += actualSpent;\n  \n  return {\n    json: {\n      symbol: item.json.symbol,\n      date: tradeDate,\n      shares_bought: shares\n    }\n  };\n});\n\n// Add USDD record showing remaining cash (should be ~$0)\nconst remainingCash = availableCash - totalSpent;\nresults.push({\n  json: {\n    symbol: 'USDW',\n    date: tradeDate,\n    shares_bought: remainingCash\n  }\n});\n\nreturn results;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[960,-48],"id":"984bc235-d6b7-417f-8569-b4f414d9ec08","name":"Calculate Monday Buys"},{"parameters":{"operation":"executeQuery","query":"INSERT INTO weekly_positions (symbol, date, shares_bought, shares_sold, buy_price, sell_price, conviction_at_buy, conviction_at_sell)\nVALUES ('{{ $json.symbol }}', {{ $json.date }}, \n        {{ $json.shares_bought ?? 0 }}, \n        {{ $json.shares_sold ?? 0 }},\n        {{ $json.buy_price ?? 'NULL' }},\n        {{ $json.sell_price ?? 'NULL' }},\n        {{ $json.conviction_at_buy ?? 'NULL' }},\n        {{ $json.conviction_at_sell ?? 'NULL' }}\n       );","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1184,-48],"id":"6576c056-0357-4248-b7d8-c49b7809fe72","name":"Record Monday Buys","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}}},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-352,160],"id":"be11e80f-7bbe-4a03-b9cd-55107e66ccff","name":"When clicking ‘Execute workflow’"},{"parameters":{"assignments":{"assignments":[{"id":"50a623a5-105d-4ad2-9f17-159b75782bb6","name":"date","value":"='2025-09-08'","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-160,-48],"id":"0695482b-4f20-44f0-8acd-41652031f817","name":"Set Date"},{"parameters":{"operation":"executeQuery","query":"SELECT DISTINCT wp.symbol\nFROM weekly_positions wp\nWHERE wp.date >= date_trunc('week', (NOW() AT TIME ZONE 'America/Chicago')::DATE)\n  AND (\n    SELECT SUM(shares_bought) - SUM(shares_sold)\n    FROM weekly_positions\n    WHERE symbol = wp.symbol\n      AND date >= date_trunc('week', (NOW() AT TIME ZONE 'America/Chicago')::DATE)\n  ) > 0\n  AND wp.symbol != 'USDW';\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[64,160],"id":"578cb8ff-53ca-49ce-809c-2eefad3cd5ca","name":"Get Current Week Holdings","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT \n  '{{ $json.symbol }}' AS symbol,\n  COALESCE(tb.conviction, 0) AS current_conviction\nFROM ticker_buys tb\nWHERE tb.symbol = '{{ $json.symbol }}'\n  AND tb.trade_date = {{ $('Set Date1').item.json.date }}\nUNION ALL\nSELECT '{{ $json.symbol }}' AS symbol, 0 AS current_conviction\nWHERE NOT EXISTS (\n  SELECT 1 \n  FROM ticker_buys tb2 \n  WHERE tb2.symbol = '{{ $json.symbol }}' \n    AND tb2.trade_date = {{ $('Set Date1').item.json.date }}\n)\nLIMIT 1;\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[288,160],"id":"7cd2d276-62c3-41c5-a80a-cd477dff6f4a","name":"Check Current Convictions","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}}},{"parameters":{"jsCode":"// Filter for symbols with conviction = 0 (need to sell)\nconst symbolsToSell = items.filter(item => item.json.current_conviction === 0);\n\nif (symbolsToSell.length === 0) {\n  // No positions to sell, return empty to stop workflow\n  return [];\n}\n\nreturn symbolsToSell;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[512,160],"id":"4879d529-620b-4ce8-b56c-b2b5d79b918a","name":"Filter Zero Conviction Positions"},{"parameters":{"operation":"executeQuery","query":"SELECT \n  '{{ $json.symbol }}' as symbol,\n  SUM(shares_bought) - SUM(shares_sold) as net_position,\n  dp.price_close\nFROM weekly_positions wp, daily_prices dp\nWHERE wp.symbol = '{{ $json.symbol }}'\n  AND wp.date >= date_trunc('week', (NOW() AT TIME ZONE 'America/Chicago')::DATE)\n  AND dp.symbol = '{{ $json.symbol }}'\n  AND dp.date = dp.date = '{{ $('Set Date1').item.json.date }}'\nGROUP BY wp.symbol, dp.price_close\nHAVING SUM(shares_bought) - SUM(shares_sold) > 0;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[736,160],"id":"6e6a42b9-7c0d-4e5f-8f01-68926a74e3d3","name":"Get Position Size and Price","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}}},{"parameters":{"jsCode":"const today = new Date().toISOString().split('T')[0];\nlet totalCashFromSales = 0;\n\nconst results = items.map(item => {\n  const sharesToSell = item.json.net_position;\n  const saleAmount = sharesToSell * item.json.price_close;\n  totalCashFromSales += saleAmount;\n  \n  return {\n    json: {\n      symbol: item.json.symbol,\n      date: today,\n      shares_sold: sharesToSell,\n      sell_price: item.json.price_close,\n      conviction_at_sell: 0\n    }\n  };\n});\n\n// Add USDW to reflect cash from sales\nif (totalCashFromSales > 0) {\n  results.push({\n    json: {\n      symbol: 'USDW',\n      date: today,\n      shares_bought: totalCashFromSales,\n      buy_price: 1.0,\n      conviction_at_buy: 0\n    }\n  });\n}\n\nreturn results;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[960,160],"id":"a1087ab7-6042-407e-85bf-9475df5bfbf7","name":"Calculate Midweek Sales"},{"parameters":{"operation":"executeQuery","query":"INSERT INTO weekly_positions (\n  symbol, date, shares_bought, shares_sold,\n  buy_price, sell_price, conviction_at_buy, conviction_at_sell\n)\nVALUES (\n  '{{ $json.symbol }}',\n  '{{ $json.date }}',\n  {{ $json.shares_bought ?? 0 }},\n  {{ $json.shares_sold ?? 0 }},\n  {{ $json.buy_price ?? NULL }},\n  {{ $json.sell_price ?? NULL }},\n  {{ $json.conviction_at_buy ?? NULL }},\n  {{ $json.conviction_at_sell ?? NULL }}\n);\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1184,160],"id":"3ef17cfb-8eab-44d1-8ab1-8efcf91ffb53","name":"Record Midweek Sales","credentials":{"postgres":{"id":"MI553DLfDKBYBMXy","name":"Postgres account"}}},{"parameters":{"assignments":{"assignments":[{"id":"50a623a5-105d-4ad2-9f17-159b75782bb6","name":"date","value":"={{ $today.toFormat('yyyy-MM-dd') }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-160,-240],"id":"e70f53ea-a722-4a6d-a4e9-de8026c05cff","name":"Set Date - Auto"},{"parameters":{"assignments":{"assignments":[{"id":"50a623a5-105d-4ad2-9f17-159b75782bb6","name":"date","value":"='2025-09-09'","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-160,160],"id":"803c8314-103b-4f52-b9ef-5e1471650b11","name":"Set Date1"}],"connections":{"Get USDW Cash Available":{"main":[[{"node":"Get Latest Conviction Scores","type":"main","index":0}]]},"Get Latest Conviction Scores":{"main":[[{"node":"Calculate Position Sizes","type":"main","index":0}]]},"Calculate Position Sizes":{"main":[[{"node":"Get Monday Open Prices","type":"main","index":0}]]},"Get Monday Open Prices":{"main":[[{"node":"Calculate Monday Buys","type":"main","index":0}]]},"Calculate Monday Buys":{"main":[[{"node":"Record Monday Buys","type":"main","index":0}]]},"When clicking ‘Execute workflow’":{"main":[[{"node":"Set Date1","type":"main","index":0}]]},"Set Date":{"main":[[{"node":"Get USDW Cash Available","type":"main","index":0}]]},"Get Current Week Holdings":{"main":[[{"node":"Check Current Convictions","type":"main","index":0}]]},"Check Current Convictions":{"main":[[{"node":"Filter Zero Conviction Positions","type":"main","index":0}]]},"Filter Zero Conviction Positions":{"main":[[{"node":"Get Position Size and Price","type":"main","index":0}]]},"Get Position Size and Price":{"main":[[{"node":"Calculate Midweek Sales","type":"main","index":0}]]},"Calculate Midweek Sales":{"main":[[{"node":"Record Midweek Sales","type":"main","index":0}]]},"Set Date1":{"main":[[{"node":"Get Current Week Holdings","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"fc0ea49b-a017-481e-86a0-d1f006ea6d8c","triggerCount":0,"tags":[{"createdAt":"2025-09-04T15:23:38.975Z","updatedAt":"2025-09-04T15:23:38.975Z","id":"yQaAGmyd3yVCL790","name":"janus"}],"shared":[{"createdAt":"2025-09-11T00:13:29.171Z","updatedAt":"2025-09-11T00:13:29.171Z","role":"workflow:owner","workflowId":"HWgsCyk7d5ywxWAh","projectId":"33RSXH6V1FUTQaMQ","project":{"createdAt":"2025-08-29T14:57:46.722Z","updatedAt":"2025-08-29T15:00:17.904Z","id":"33RSXH6V1FUTQaMQ","name":"Scott Murray <scomurr@scomurr.com>","type":"personal","icon":null,"description":null}}]}]